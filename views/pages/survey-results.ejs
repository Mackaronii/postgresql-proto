<!DOCTYPE html>
<html>
  <head>
    <%- include ("../partials/header.ejs") %>
  </head>

  <body>
    <%- include ("../partials/nav.ejs") %>

    <div class="container">
      <h2>Survey Results for <%= survey.surveyname %></h2>
      <% surveyResults.forEach(function(question) { %>
      <hr />
      <% if (question.questiontype === 'open-ended') { %> <%-
      include("../partials/open-ended-results.ejs", {question: question}) %> <%
      } else if (question.questiontype === 'number-range') { %> <%-
      include("../partials/number-range-results.ejs", {question: question}) %>
      <% } else {%>
      <p>Pie chart goes here.</p>
      <% }}); %>
      <p><%= JSON.stringify(surveyResults); %></p>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      const surveyResults = JSON.parse(`<%- JSON.stringify(surveyResults) %>`);
      // Create a histogram for each number range question
      for (question of surveyResults) {
        if (question.questiontype !== "number-range") continue;
        // Create a frequency hashmap to use as input for the histogram
        const totalRange = question.maxrange - question.minrange + 1;
        const freqKeys = [...Array(totalRange).keys()].map(
          (i) => i + question.minrange
        );
        // Initialize keys to 0 (empty bins in histogram)
        const frequencies = {};
        for (key of freqKeys) frequencies[key] = 0;
        // Populate dataset
        for (answer of question.answers) frequencies[answer.answertext]++;

        // Draw the actual histogram
        const ctx = document
          .getElementById(question.questionid)
          .getContext("2d");
        const myChart = new Chart(ctx, {
          type: "bar",
          data: {
            labels: Object.keys(frequencies),
            datasets: [
              {
                data: Object.values(frequencies),
                backgroundColor: [
                  "rgba(255, 99, 132, 0.2)",
                  "rgba(54, 162, 235, 0.2)",
                  "rgba(255, 206, 86, 0.2)",
                  "rgba(75, 192, 192, 0.2)",
                  "rgba(153, 102, 255, 0.2)",
                  "rgba(255, 159, 64, 0.2)",
                ],
                borderColor: [
                  "rgba(255, 99, 132, 1)",
                  "rgba(54, 162, 235, 1)",
                  "rgba(255, 206, 86, 1)",
                  "rgba(75, 192, 192, 1)",
                  "rgba(153, 102, 255, 1)",
                  "rgba(255, 159, 64, 1)",
                ],
                borderWidth: 1,
                barPercentage: 1,
                categoryPercentage: 1,
              },
            ],
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                display: false,
              },
            },
            scales: {
              x: {
                title: {
                  display: true,
                  text: "Value",
                },
              },
              y: {
                title: {
                  display: true,
                  text: "Frequency",
                },
                beginAtZero: true,
                ticks: {
                  stepSize: 1,
                },
              },
            },
          },
        });
      }
    </script>
  </body>
</html>
